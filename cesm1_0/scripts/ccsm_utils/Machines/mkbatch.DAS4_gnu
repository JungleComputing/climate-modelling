#! /bin/csh -f

set mach = DAS4_gnu

#################################################################################
if ($PHASE == set_batch) then
#################################################################################

source ./Tools/ccsm_getenv || exit -1

set ntasks  = `${UTILROOT}/Tools/taskmaker.pl -sumonly`
set maxthrds = `${UTILROOT}/Tools/taskmaker.pl -maxthrds`
@ nodes = $ntasks / ${MAX_TASKS_PER_NODE}
if ( $ntasks % ${MAX_TASKS_PER_NODE} > 0) then
  @ nodes = $nodes + 1
  @ ntasks = $nodes * ${MAX_TASKS_PER_NODE}
endif
@ taskpernode = ${MAX_TASKS_PER_NODE} / ${maxthrds}
set qname = batch
set tlimit = "00:59:00"

#--- Job name is first fifteen characters of case name ---
set jobname = `echo ${CASE} | cut -c1-15`

cat >! $CASEROOT/${CASE}.${mach}.run << EOF1
#!/bin/csh -f
#\$ -N ${CASE}
#\$ -pe openmpi ${ntasks}
#\$ -l h_rt=1:00:00
#\$ -cwd

source /etc/csh.cshrc
source /etc/profile.d/modules.csh

module purge
module load openmpi/gcc/64/1.4.2 
module load netcdf/gcc/64/4.1.1
module load sge/6.2u5p2
module list 

# Make new hostfile specifying the cores per node wanted
set ncores = ${MAX_TASKS_PER_NODE}

set HOSTFILE=\$TMPDIR/hosts

foreach host (\`uniq \$TMPDIR/machines\`)
    echo \$host slots=\$ncores >> \$HOSTFILE
end

set nhosts = \`wc -l < \$HOSTFILE\`
set totcores = \`expr \$nhosts \* \$ncores\`

# Use regular ssh-based startup instead of OpenMPI/SGE native one
unsetenv PE_HOSTFILE
setenv PATH /usr/bin:\$PATH


EOF1

#################################################################################
else if ($PHASE == set_exe) then
#################################################################################

set maxthrds = `${UTILROOT}/Tools/taskmaker.pl -maxthrds`
set maxtasks = `${UTILROOT}/Tools/taskmaker.pl -sumtasks`

cat >> ${CASEROOT}/${CASE}.${MACH}.run << EOF1
# -------------------------------------------------------------------------
# Run the model
# -------------------------------------------------------------------------

sleep 5
cd \$RUNDIR
echo "\`date\` -- CSM EXECUTION BEGINS HERE" 

setenv OMP_NUM_THREADS ${maxthrds}

$MPI_RUN -np \$totcores --hostfile \$HOSTFILE --output-filename out.c1.\$LID ./ccsm.exe >&! ccsm.log.\$LID

wait
echo "\`date\` -- CSM EXECUTION HAS FINISHED" 

EOF1

#################################################################################
else if ($PHASE == set_larch) then
#################################################################################


   #This is a place holder for a long-term archiving script


#################################################################################
else
#################################################################################

    echo "mkscripts.$mach"
    echo "  PHASE setting of $PHASE is not an accepted value"
    echo "  accepted values are set_batch, set_exe and set_larch"
    exit 1

#################################################################################
endif
#################################################################################
